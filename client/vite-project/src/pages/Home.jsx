import React from 'react';
import { useState,useEffect } from 'react';
import { Card,FormField,Loader } from "../components/index.js";


//making another functional component which is highly reusable :-
//this component isused to render the data/images/posts according to whether there is 
// a searchText entered by the user  or not or if the user has typed something if there is some data to display or note i.e(any images are found corrsponding to the searchtext)
const RenderCards = ({data,title}) => {

  if(data?.length > 0){
    return(
      data.map((post)=> <Card key={post._id} {...post} />));
  }

  return(<h2 className='mt-5 font-bold text-[#6449ff] text-xl uppercase'>{title}</h2>);



};

const Home = () => {
  //using the useEffect state hook to display all the already generated ,stored and shared ai images:-
  useEffect(()=>{
    setLoading(true);
    //now implementing the get request from client->server
    try {
      async function fetchPosts(){
        const response = await fetch("http://localhost:8080/api/v1/post",{
        method:"GET",
        headers:{
          "Content-Type":"application/json",
        },
      })

      if(response.ok){
        const result = await response.json();
        //now we have the required data stored in one of the props of 'result' variable:-
        setAllPosts(result.data.reverse());
        //reverse is done to display the latest data first:-
      }
      }

      fetchPosts();
      
      
    } catch (error) {
      console.log(error);
      alert(error);
    }
    finally{
      setLoading(false);
    }

  },[]);


  function handleSearchChange(event){
    clearTimeout(searchTimeOut);
    
    setSearchText(event.target.value);
    
    setSearchTimeOut(
      setTimeout(()=>{
      
      const searchResults = allPosts.filter((post)=>{
        return(post.name.toLowerCase().includes(searchText.toLowerCase()) || post.prompt.toLowerCase().includes(searchText.toLowerCase()));
    })
      setSearchedResults(searchResults);
      },500)
    );
    // setSearchText(event.target.value);

    // const searchResults = allPosts.filter(({post})=>{
    //   return(post.prompt);
    // })
    
    

  }


  //USING 5 STATE VARIABLES:-
  //loading used for when the data is being fetched from the server until then a buffer loading dynamic animation is displayed using the <Loader /> react component
  //allPosts used for ->
  //searchText refers to the searchdata / input by the user in the search field i.e <FormField /> react component
  //using which we will fetch and render the data/posts/images accordingly:-
  const [loading,setLoading] = useState(false);
  const [allPosts,setAllPosts] = useState([]);
  const [searchText, setSearchText] = useState("");
  //
  //
  const [searchedResults, setSearchedResults] = useState(null);
  const [searchTimeOut, setSearchTimeOut] = useState(null);
  //SETTING UP OF HOMEPAGE:-
  // now we put all the content in a section on the homepage
  // and the section/homepage is divided into 3 parts/div
  // first div dispays <h1> and <p>
  // second div is used to render the <FormField /> react functional component which is used for :-
  // Taking input text from the user that is another dynamic quantity so we use a State variable for that called 'searchText'
  // now the 3rd div is used to render the data according to whether the user has entered some search data or not 
  // and to render all the post we create another component inside home.jsx called RenderCards which takes 2 properties
  // the 'data' to be rendered if there are any images and the 'title' in case there is no data available to display to the user
  // this RenderCards component uses the <Card /> component which takes the 'key' and the 'current post' being mapped as props when the data is available(i.e data.length>0) 

  return (
    <section className='max-w-7xl mx-auto'>

    <div>

      <h1 className='font-extrabold text-[#222328] text-[32px]'>The Community Showcase</h1>
      
      <p className='mt-2 text-[#666e75] text-[14px] max-w-[500px]'>
        Browse through a collection of imaginative and visually stunning images generated by DALL-E AI
      </p>
    
    </div>

    <div className="mt-16">
    <FormField 
      labelName="Search posts"
      type="text"
      name="text"
      placeholder="Search Posts.."
      value={searchText}
      handleChange={handleSearchChange}
    />
    </div>

    <div className='mt-10'>
      {loading ? 
      <div className='flex justify-center text-center'>
        <Loader />
      </div> : <>
                {searchText && <h2 className='font-medium text-[#666e75] text-xl mb-3'>
                Showing results for <span className='text-[#222328]'>{searchText}</span>
                </h2>}
                <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
                  {searchText ? <RenderCards data={searchedResults} title={"No search results found"} /> :
                  <RenderCards data={allPosts} title={"No posts found"} />

                   }
                </div>
               </>}
    </div>
    </section>
  );
}

export default Home;